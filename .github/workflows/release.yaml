name: Create Release
on:
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]

permissions:
  id-token: write
  contents: write
  pull-requests: write

jobs:
  semantic-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: paulhatch/semantic-version@v5.3.0
        id: generate-version
        with:
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          version_format: "v${major}.${minor}.${patch}"

    outputs:
      version: ${{ steps.generate-version.outputs.version }}

  release:
    if: github.event_name == 'push'
    needs: [semantic-version]
    runs-on: ubuntu-latest
    env:
      D_TAG: "${{ needs.semantic-version.outputs.version }}"
    steps:
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "${{ env.D_TAG }}" \
              --repo="${GITHUB_REPOSITORY}" \
              --title="${{ env.D_TAG }}" \
              --generate-notes || echo "Release already exists, proceeding to edit release notes" \
          gh release edit "${{ env.D_TAG }}" \
              --repo="${GITHUB_REPOSITORY}" 

      - name: Generate Summary
        if: always()
        run: |
          cat > $GITHUB_STEP_SUMMARY << EOL
          ## Create Release (Only generated when merging a PR to main)
          New Release ðŸ”—: [${{ env.D_TAG }}](${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ env.D_TAG }})
          EOL